// Estilos para o elemento com classe "container"
.container {
    width: 100%;
    margin-left: auto;
    margin-right: auto;

    @include media-query("extra-small") {
        padding: 0 1rem;
        max-width: 100%;
    }

    @include media-query("small") {
        padding: 0 2rem;
        max-width: 34rem; // Exemplo de tamanho responsivo em rem
    }

    @include media-query("medium") {
        padding: 0 3rem;
        max-width: 48rem;
    }

    @include media-query("large") {
        padding: 0 4rem;
        max-width: calc(100vw - 8rem);
    }

    @include media-query("extra-large") {
        padding: 0 5rem;
        max-width: calc(100vw - 12rem);
    }
}


// Classe para o elemento com classe "row"
.row {
    display: flex;
    flex-wrap: wrap;
    margin: auto;
}

//colunas
@function calculate-column-width($columns) {
    $base-column-width: calc(100% / 12);
    $column-width: $base-column-width * $columns;
    @return $column-width;
}

@each $breakpoint,
$max-width in $breakpoints {
    @media screen and (min-width: $max-width) {
        @for $i from 1 through 12 {
            .col-#{$breakpoint}-#{$i} {
                width: calculate-column-width($i) !important;
            }
        }
    }
}

.col {
    @for $i from 1 through 12 {
        &-#{$i} {
            width: calculate-column-width($i);
        }
    }
}

@each $breakpoint,
$max-width in $breakpoints {
    @media screen and (max-width: $max-width) {
        .col-#{$breakpoint} {
            &.col {
                width: 100%;
            }
        }
    }
}

@media screen and (min-width: map-get($breakpoints, "extra-large")) {
    .col-xl {
        @for $i from 1 through 12 {
            &-#{$i} {
                width: calculate-column-width($i) !important;
            }
        }
    }
}

